from math import exp,log
from gmpy2 import iroot

n = []
c = []
e = 101

n.append(26776438643519606554915788984921134595319203569288334076519891204219569772012905997846522915541929022658111901438492478179902299285321820445295051014345101850380901044256424114351559867994505005498591962712037988743824349808697146766890229509168365376712620702621808769988836794769180003101073520949695486888982132398007981849333491049536959473364375504069658185572247989157001510802462554072409800949267019866860487673188047571276000734155944943820021861222939872647294959777997940186043643421370894202308081637041626544089160491337222467720257506898391355755605702937156396766135105822707438260728317871531903752933)
c.append( 638261914452974434135397496187965176444635174049819836142086105704445507053651393122424180225506808629279709041779831187718569685457070254576047387663382703592920413962950862618085931286062684522907591992125895953696124174454508926968223978175844085612887825074524550352426017589177711156369377565665982545481613393337717279837234434772166731361973517021112796644967019128372517439716071692273867905119492300982821985302555104990666057574714252846503157959577091655857633629975959865306556826450251667313056236203365992578788605890956804900763469241144556783314184666342689203083744737335910056095155540892480446096)

n.append(20879033921108901409730615222292397530915133758576119431334795986811500085927128139167902874456030699199324676716821441633644901735661697048060082336273360266628258091276438674039032738891253700647531002621318523533327487875401522665684484005354813151850621757748825094737496049931830473578212282843193097232166850229501976357227642301154390636541031792819744896105448835164800349770535346623647824068796397562659165380401605839681023627888308547815452502722758808487570079551545394456315513888479975840652405127268833675096551981371566076482910867416618835603553668158134528857909548970156899814341484478942605709237)
c.append( 17525698317960414837914483668926238727123076095346521443779641070716029690865929926662921811710244880464817423776729515805575459013291750379404931157894428515020650052016620933787186734872574216198963943684919954515617837744476958178279965390059142661153418762797228285395607596985874005178393614572717405524592080528602050994089458422835361208925293407242840669359512009350446343524024627603657069975487524908094103446249292372303901125216041132344647700147436743754526589924164137002238504742670104955302076362784336493666204468954992653115714910221802451780349311251738306706012959725633114371575219325997551841234)

n.append(22635082402761717365701849099599949451057306215394785202071611443880661655342911294687247387887212750451400099779968921482247573887451621712120630099405272556457093674548761358791178990318566963383328558175688764688908758315279714212526388861894426190650042574919951132569910424736387475974706301011590336337640837688275128152478183117473948580942449181628470161381654709760354719137544948966773619915365009349216532249711535081052567704552257585932196314316090050184677275431596192908731360937270689030803213768703377227893382089137859362753207109021645085523949850592786664415388712279455167923604296262458875833507)

c.append( 2676290361670709170688352008050228799551301692961936140594512008069784300994056109486329438307351052822836538920306837186352416798175675773200985351071911999262718850085799231312432531098394498566552409579648437054816636484331769560806600721986602020703422741929166562299496020767147985633350649304432973052643733773786910929643683625368882065366428556005792496403632630943441956831397279151798121952118477663329110080138151409053133618689285384652030502983282176558494544956887696528855163769274897139265848097719944905030070650179959736107147601625421574306281845975129169256596850262892182470933263609180958793151)

n.append(23867124666154246706326773065471919277761336003967856928816978633880977882462983111627123906745734816365652746989584499702401712958164660711917552700982997748763360821615636916897821943462040724158270779295206730158550725562137127785047516981260288299204867398125359894741617612886346113738050704614864823903642260294715366572890225763287621707233803214900763894945073496009830374466043090176086615686558914350543274689019523678677488497349929854998630955663577809574190239431593242804850749788089311461931534930472402738586609702687439781308906082611896833854675973208827223850273927479006514083804132662289378636931)

c.append( 7447407211110845149482413042337167805778871039247982319365644810815369407682807165888311457254237288501702539752793833739286359558560228118594828898439457980436237064057065946769503132937352698076108761469052440781934584565866720379657791812457441170691547590362802049027343039992686267773306742392090549964529852723052112493131120917322541508744696600245839035644336990326571965863769589664321973039109197745526673432992593119400424591721306923876292581434323119794502922973700711157282263175862217940200897019112797049840020268547050025776339815768498876660085582799403876465924748334915694140507786943725248398733)



M = 1
for nn in n:
    M *= nn

b = [int(pow((M//nn),-1,nn)) for nn in n]
test = [(bb*M//nn)%nn for nn,bb in zip(n,b)]
print(test)

x0 = 0
for i in range(len(c)):
    x0 += c[i] * b[i] * (M//n[i])

x0 = x0 % M

r,exact = (iroot(x0, e))     
print(r)
print(r**e == x0)

test = [cc == pow(r,e,nn) for nn,cc in zip(n,c)]
print(test)